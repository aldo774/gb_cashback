"""
Django settings for application project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

from application.apps.base.apps import Base
from application.apps.dealer.apps import Dealer
from application.apps.user.apps import User

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATES_DIR = os.path.join(BASE_DIR,'templates')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# Application definition
LOCAL_APPS = [
    Base.name,
    Dealer.name,
    User.name,
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_yasg'
] + LOCAL_APPS

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'application.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            ],
        },
    },
]

WSGI_APPLICATION = 'application.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'DB_ENGINE',
        # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'DB_NAME',  # Or path to database file if using sqlite3.
        'USER': 'DB_USER',  # Not used with sqlite3.
        # 'PASSWORD': DB_PASS,  # Not used with sqlite3.
        'HOST': 'DB_HOST',  # Set to empty string for localhost. Not used with sqlite3.
        'PORT': 'DB_PORT',  # Set to empty string for default. Not used with sqlite3.
    }
}

AUTH_USER_MODEL = 'user.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

## Logging configuration

LOCAL_LOGGER_CONF = {
    'handlers': ['console'],
    'level': 'INFO',
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'hide_document': {
            '()': f'{Base.name}.logs.HideDocument'
        },
        'hide_email': {
            '()': f'{Base.name}.logs.HideEmail'
        },
        'hide_name': {
            '()': f'{Base.name}.logs.HideName'
        },
        'hide_password': {
            '()': f'{Base.name}.logs.HidePassword'
        },
    },
    'handlers': {
        'console': {
            'filters': ['hide_document', 'hide_email', 'hide_name', 'hide_password'],
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        **{app: LOCAL_LOGGER_CONF.copy() for app in LOCAL_APPS}
    },
}

## Doc. configuration

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'basic': {
            'type': 'basic'
        }
    }
}

REDOC_SETTINGS = {
   'LAZY_RENDERING': False
}
